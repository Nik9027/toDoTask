{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/taskservice.service.ts","webpack:///./src/app/view-task/view-task.component.css","webpack:///./src/app/view-task/view-task.component.html","webpack:///./src/app/view-task/view-task.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \".todotext{\\r\\n    color: brown;\\r\\n    font-weight: bold;\\r\\n    text-shadow: 1px 1px 1px black;\\r\\n}\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<div class=\\\"container\\\">\\n<div>\\n  <h1 class=\\\"todotext\\\">toDoTask</h1>\\n</div>\\n\\n<div>\\n    <app-view-task></app-view-task>\\n  </div>\\n</div>\\n\\n\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'my-app';\n \n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\n\nimport { ViewTaskComponent } from './view-task/view-task.component';\nimport { HttpClientModule } from '@angular/common/http'\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n   \n    ViewTaskComponent\n  ],\n  imports: [\n    BrowserModule, HttpClientModule  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\n\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Task } from './app.task';\n\n\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TaskserviceService {\n\n  constructor(public http: HttpClient) { }\n\n  public addMyTask(task){\n        return this.http.get<Task>('http://localhost:8080/task/add?taskDescription='+task+'&status=Pending',{headers:{'Access-Control-Allow-Origin':'*'}});\n   \n  \n  }\n\n  public getAllMyTask(){\n    return this.http.get<Task[]>('http://localhost:8080/task/all',{headers:{'Access-Control-Allow-Origin':'*'}});\n\n\n}\npublic deleteTask(taskID){\n  return this.http.get<Boolean>('http://localhost:8080/task/delete?TaskID='+taskID+'',{headers:{'Access-Control-Allow-Origin':'*'}});\n\n}\n  \npublic updateTask(taskID){\n  return this.http.get<Task>('http://localhost:8080/task/update?TaskID='+taskID+'&status=Complete',{headers:{'Access-Control-Allow-Origin':'*'}});\n\n}\n}\n","module.exports = \".viewTaskH2{\\r\\n    color: darkslategray;\\r\\n}\\r\\n.viewTaskDiv{\\r\\n    margin-top: 20px;\\r\\n    padding-left: 20px;\\r\\n    border: 1px solid #e2e2e2;\\r\\n    box-shadow: 1px 1px 1px #e2e2e2;\\r\\n    border-radius: 3px;\\r\\n    padding-bottom: 20px;\\r\\n    padding-right: 20px;\\r\\n}\\r\\n.addTaskH2{\\r\\n    color: darkslategray;\\r\\n}\\r\\n.addTaskDiv{\\r\\n    padding-left: 20px;\\r\\n    border: 1px solid #e2e2e2;\\r\\n    box-shadow: 1px 1px 1px #e2e2e2;\\r\\n    border-radius: 3px;\\r\\n    padding-bottom: 20px;\\r\\n    padding-right: 20px;\\r\\n}\\r\\n.inputDesc{\\r\\n    padding-left: 10px;\\r\\n    width: 70%;\\r\\n    height: 40px;\\r\\n    margin-bottom: 10px;\\r\\n}\"","module.exports = \"<div class=\\\"addTaskDiv\\\">\\n    <div>\\n      <h4 class=\\\"addTaskH2\\\">Add Task Here</h4>\\n    </div>\\n    <div>\\n        <input class=\\\"inputDesc\\\" #description placeholder=\\\"enter task description\\\" />\\n    </div>\\n    <div>\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=addData(description.value)>ADD TASK</button>\\n    </div>\\n  </div>\\n<div class=\\\"viewTaskDiv\\\">\\n    <div>\\n        <h4 class=\\\"viewTaskH2\\\">View Task Here</h4>\\n      </div>\\n      <div>\\n        <table class=\\\"table table-striped \\\" style=\\\"widows: 100%;\\\">\\n          <tr>\\n            \\n            <th>Description</th>\\n            <th>Status</th>\\n            <th></th>\\n            <th></th>\\n          </tr>\\n          <tr class=\\\"trow\\\" *ngFor=\\\"let d of taskData;\\\">\\n          <td style=\\\"width:50%\\\">{{d.taskDescription}}</td>  \\n          <td style=\\\"width:30%\\\">{{d.status}}</td>  \\n          <td><button class=\\\"btn btn-danger\\\" (click)=deleteData(d.taskID)>Delete</button></td>\\n          <td><button *ngIf=\\\"d.status!='Complete'\\\" class=\\\"btn btn-success\\\" (click)=changeStatus(d.taskID,d.status)>Complete Task</button></td>\\n        </tr>\\n        </table>\\n      </div>\\n</div>\"","import { Component, OnInit, Input,OnChanges, SimpleChanges, SimpleChange } from '@angular/core';\nimport { AppComponent } from '../app.component';\nimport { TaskserviceService } from '../taskservice.service';\nimport { Task } from '../app.task';\n\n@Component({\n  selector: 'app-view-task',\n  templateUrl: './view-task.component.html',\n  styleUrls: ['./view-task.component.css']\n})\nexport class ViewTaskComponent implements OnInit {\n\n  constructor(private service: TaskserviceService) { }\n  taskData: Task[]\n  taskReturn: Task;\n  bol: Boolean;\n  task : Task;\n  \n\n  ngOnInit() {\n    \n    this.getData();\n  }\n\n  addData(description){\n\n    this.service.addMyTask(description).subscribe(data =>{\n     this.task=data;\n     if(description == this.task.taskDescription)\n     {\n       alert(\"Task added successfully\")\n       this.getData();\n      \n     }\n     else\n     {\n       alert(\"some error occured while adding task\")\n     }\n     \n    })\n   }\n  getData(){\n    this.service.getAllMyTask().subscribe(data => {\n      this.taskData=data;\n      \n     //this.taskData.forEach(d => alert(d.taskDescription));\n    })\n  }\n\n  deleteData(taskID){\n    \n    this.service.deleteTask(taskID).subscribe(data => {\n      this.bol= data;\n      if(this.bol)\n      {\n        //alert(\"Task Deleted Successfully\")\n        this.getData();\n      }\n    })\n  }\n  changeStatus(taskID, status)\n  {\n    \n    this.service.updateTask(taskID).subscribe(data => {\n      this.taskReturn=data;\n      \n      if(this.taskReturn.status == \"Complete\")\n      {\n        //alert(\"Task has been completed.\")\n        this.getData();\n      }\n\n    })\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n\n"],"sourceRoot":""}